import matplotlib.pyplot as plt
import numpy as np

# 模拟的训练数据
epochs = np.arange(1, 51)
loss = [1.8861, 1.0192, 0.5747, 0.4149, 0.2654, 0.2019, 0.1442, 0.1103, 0.1207, 0.0710,
        0.0520, 0.0773, 0.0398, 0.0165, 0.0392, 0.0279, 0.0183, 0.0130, 0.0129, 0.0128,
        0.0457, 0.0093, 0.0032, 0.0009, 0.0005, 0.0004, 0.0003, 0.0002, 0.0002, 0.0002,
        0.0002, 0.0002, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001,
        0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]
accuracy = [0.3941, 0.6981, 0.8092, 0.8532, 0.8721, 0.9140, 0.9036, 0.9140, 0.9036, 0.9161,
            0.9245, 0.9350, 0.9434, 0.9413, 0.9455, 0.9497, 0.9413, 0.9392, 0.9329, 0.9434,
            0.9350, 0.9602, 0.9539, 0.9560, 0.9581, 0.9539, 0.9539, 0.9560, 0.9581, 0.9581,
            0.9581, 0.9581, 0.9581, 0.9560, 0.9581, 0.9560, 0.9560, 0.9581, 0.9581, 0.9539,
            0.9560, 0.9560, 0.9560, 0.9560, 0.9560, 0.9560, 0.9560, 0.9560, 0.9560, 0.9560]
nmi = [0.4219, 0.6380, 0.7309, 0.7763, 0.7989, 0.8515, 0.8349, 0.8426, 0.8280, 0.8436,
       0.8593, 0.8761, 0.8883, 0.8913, 0.8939, 0.9001, 0.8822, 0.8847, 0.8737, 0.8966,
       0.8777, 0.9208, 0.9046, 0.9093, 0.9150, 0.9048, 0.9061, 0.9104, 0.9136, 0.9136,
       0.9136, 0.9136, 0.9136, 0.9093, 0.9136, 0.9106, 0.9105, 0.9136, 0.9136, 0.9061,
       0.9105, 0.9105, 0.9105, 0.9105, 0.9105, 0.9105, 0.9105, 0.9105, 0.9105, 0.9105]
cen = [0.3990, 0.3776, 0.2738, 0.2377, 0.2132, 0.1561, 0.1666, 0.1523, 0.1687, 0.1480,
       0.1369, 0.1203, 0.1041, 0.1058, 0.1022, 0.0947, 0.1094, 0.1122, 0.1246, 0.1019,
       0.1206, 0.0733, 0.0858, 0.0824, 0.0781, 0.0865, 0.0859, 0.0822, 0.0789, 0.0789,
       0.0789, 0.0789, 0.0789, 0.0826, 0.0789, 0.0824, 0.0827, 0.0789, 0.0789, 0.0865,
       0.0827, 0.0827, 0.0827, 0.0827, 0.0827, 0.0827, 0.0827, 0.0827, 0.0827, 0.0827]

# 绘图
plt.figure(figsize=(10, 6))
plt.plot(epochs, loss, label='Loss')
plt.plot(epochs, accuracy, label='Accuracy')
plt.plot(epochs, nmi, label='NMI')
plt.plot(epochs, cen, label='CEN')
plt.xlabel('Epoch')
plt.ylabel('Value')
plt.title('Training Metrics Over Epochs')
plt.legend()
plt.grid(True)
plt.show()
